name: Attach unified SHA256SUMS

on:
  workflow_run:
    workflows:
      - Attach .deb assets to release
      - Attach .rpm assets to release
    types: [completed]

  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v1.9.2)"
        required: false
        default: ""

permissions:
  contents: write

concurrency:
  group: attach-unified-sums-${{ github.event.workflow_run.id || inputs.tag || 'manual' }}
  cancel-in-progress: false

jobs:
  unify-sums:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Resolve target tag
        id: tag
        shell: bash
        env:
          INPUT_TAG: ${{ inputs.tag }}
        run: |
          set -euo pipefail
          echo "${{ github.token }}" | gh auth login --with-token

          if [[ -n "${INPUT_TAG}" ]]; then
            TAG="${INPUT_TAG}"
          else
            # Use the latest release (works for workflow_run)
            TAG="$(gh release view --json tagName -q .tagName)"
          fi
          [[ -n "$TAG" ]] || { echo "Could not determine release tag"; exit 1; }

          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Using release: $TAG"

      - name: Ensure both .deb and .rpm assets are present
        id: guard
        env:
          GH_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ steps.tag.outputs.tag }}
        shell: bash
        run: |
          set -euo pipefail

          # Query current assets on the release
          json="$(gh release view "$TAG_NAME" --json assets)"
          debs=$(jq '[.assets[].name | select(endswith(".deb"))] | length' <<<"$json")
          rpms=$(jq '[.assets[].name | select(endswith(".rpm"))] | length' <<<"$json")

          echo "Found $debs .deb and $rpms .rpm assets on $TAG_NAME"

          if (( debs < 1 || rpms < 1 )); then
            echo "Both asset types not present yet; exiting neutral so this job re-triggers after the other workflow finishes."
            exit 78  # neutral / skip
          fi

      - name: Checkout default branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: Merge safexec/deb + safexec/rpm SHA256SUMS
        id: merge
        shell: bash
        run: |
          set -euo pipefail

          OUT="SHA256SUMS"
          TMP="$(mktemp)"
          HAVE_ANY=0

          add_file() {
            local file="$1"
            if [[ -f "$file" ]]; then
              HAVE_ANY=1
              # Normalize to "<hash><two spaces><filename>" and drop any path
              awk 'NF>=2 {
                     hash=$1; $1=""; sub(/^  /,"");
                     fn=$0;
                     gsub(/^\.\/?/,"",fn);
                     n=split(fn, parts, "/");
                     base=parts[n];
                     print hash "  " base
                   }' "$file" >> "$TMP"
            fi
          }

          add_file safexec/deb/SHA256SUMS
          add_file safexec/rpm/SHA256SUMS

          if [[ $HAVE_ANY -eq 0 ]]; then
            echo "No SHA256SUMS found to merge (expected safexec/deb/SHA256SUMS or safexec/rpm/SHA256SUMS)"; exit 78
          fi

          sort -k2,2V "$TMP" | uniq > "$OUT"
          echo "Wrote $(wc -l < "$OUT") entries to $OUT"
          echo "path=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload unified SHA256SUMS (overwrite if present)
        if: steps.merge.outputs.path
        env:
          GH_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ steps.tag.outputs.tag }}
        shell: bash
        run: |
          set -euo pipefail
          gh release upload "$TAG_NAME" --clobber "${{ steps.merge.outputs.path }}"
